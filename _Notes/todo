053124

- [x] finish implementing energy

- [x] add siren and light at >90% damage

- [x] refactor damageOnImpact so that owners are detecting other collisions instead of sending damage on impact.
  - damageOnImpact can search for InflictDamage script on colliding object to check for extra damage other than impulse force damage
  - projectiles can use InflictDamage script.. this can also be where different damage types are defined.

==

- Just finished ImpactFX and object pooling

  - Note: Lasers are weird now.. seemingly visually inconsistent when firing;
    - There was an odd issue where the prefabpool was throwing errors about attempting to add an existing key to the pendingReturn list, meaning there were objects still in the pendingReturn list that were also being dequed in the Get() method.. not sure how.
      ... ignored this and used TryAdd method instead of Add, but I'm curious about why that's happening, and guessing it's related to this inconsistency issue.

- ExplosionFX is WIP; but good enough - see todos

- [x] Add Missle;

  - [x] Create missle obj
  - [x] Add Homing using large sphere trigger
  - [x] Add MissleTrackable script to objects that can be homed on by missle
  - [x] When missle in another, smaller range, add explosion force.. apply damage based on distance.
    - [] Add Projectile class to handle speed

  - [] Add ExplosionFX to missile


- [] Create ProjectileSpawner
  - Uses dedicated pool based on prefab
  - Projectile Class should have OnSpawn and OnDespawn ? This can set the behavior for resetting and returning to the pool; (might eliminate the weirdness w/ current PrefabPool's return queue)

- [] Guns should not handle projectile speed

  - [] Update Laser and Projectile script
    - [] Projectile should handle lifetime and the OnDisable/lifeEnd action

- [] Add Shield

- [] Add EnergyManagement

- [x] Add Camera wobble
  - [] try w/out physics; And/or look into referencing inertia to programatically move; Or see if there's a way to get spring behavior using acceleration instead of force.

- [] Add lookaround movement input?
  - either use left stick and move yaw? Or maybe use left stick while pressed and move DampingDisable to another control

- [] Create new control map:
  - use triggers for yaw
  - single stick for pitch+roll
  - other stick can be either translation or lookaround.

- [] look into using decals
  - [] to project text onto glass
  - [] to project animated effect onto spherical shield upon impact (?)

- [] consider revamping movement to use real thrusters. (also add fx)

- [] Fix ShipThrust sound fx to gradually increase pitcch
  - *May not be necessary if using a continuous input


- [] Set asteroid explosion particle to asteroid mesh

- [] change power UI to a meter