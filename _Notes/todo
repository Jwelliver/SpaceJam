053124

- [x] finish implementing energy

- [x] add siren and light at >90% damage

- [x] refactor damageOnImpact so that owners are detecting other collisions instead of sending damage on impact.
  - damageOnImpact can search for InflictDamage script on colliding object to check for extra damage other than impulse force damage
  - projectiles can use InflictDamage script.. this can also be where different damage types are defined.

==

- Just finished ImpactFX and object pooling

  - Note: Lasers are weird now.. seemingly visually inconsistent when firing;
    - There was an odd issue where the prefabpool was throwing errors about attempting to add an existing key to the pendingReturn list, meaning there were objects still in the pendingReturn list that were also being dequed in the Get() method.. not sure how.
      ... ignored this and used TryAdd method instead of Add, but I'm curious about why that's happening, and guessing it's related to this inconsistency issue.

- ExplosionFX is WIP; but good enough - see todos

- [x] Add Missle;

  - [x] Create missle obj
  - [x] Add Homing using large sphere trigger
  - [x] Add MissleTrackable script to objects that can be homed on by missle
  - [x] When missle in another, smaller range, add explosion force.. apply damage based on distance.
    - [] Add Projectile class to handle speed
  - [] Try using trail particle for exhaust particle to see if that has better results

  - [] Add ExplosionFX to missile


- [] Create ProjectileSpawner
  - Uses dedicated pool based on prefab
  - Projectile Class should have OnSpawn and OnDespawn ? This can set the behavior for resetting and returning to the pool; (might eliminate the weirdness w/ current PrefabPool's return queue)

- [] Guns should not handle projectile speed

  - [] Update Laser and Projectile script
    - [] Projectile should handle lifetime and the OnDisable/lifeEnd action

- [] Add Shield

- [] Add EnergyManagement

- [x] Add Camera wobble
  - [x] try w/out physics; And/or look into referencing inertia to programatically move; Or see if there's a way to get spring behavior using acceleration instead of force.

- [] Add lookaround movement input?
  - either use left stick and move yaw? Or maybe use left stick while pressed and move DampingDisable to another control

- [] Create new control map:
  - use triggers for yaw
  - single stick for pitch+roll
  - other stick can be either translation or lookaround.

- [] look into using decals
  - [] to project text onto glass
  - [] to project animated effect onto spherical shield upon impact (?)

- [] consider revamping movement to use real thrusters. (also add fx)

- [] Fix ShipThrust sound fx to gradually increase pitcch
  - *May not be necessary if using a continuous input

- [] Add smoke impact between laser and asteroid.
  - [] set fx scale depenndent on laser charge

- [x] Switch project renderer to URP; (to allow cinematic explosions package)
  - already installed URP; Just need to run the Render Pipeline Converter; **May be better off to start a new URP project and just copy in the scripts, reimport the dl'd assets, and remake the materials.

- [] Radar Display Cont'd
  - [x] Review blip positioning method
  - [x] prevent radar from tracking own ship
    - [x] Add dedicated center blip or crosshair
  - [] add meshes and/or dedicated blips.
  - ! [x] Bug: Occasionally got a transform null ref when testing; 

- [] Don't show damage UI until it's greater than zero.


- [] extract radar code from radar display
  - [] ? consider replacing missle trackable w/ radar logic


- [] Bugs:
  - [] in scripts that spawn other objs on destroy, and check if app is quitting, make sure to also check if app is restarting.

- [] Create ShipComponentRef script to act as general reference point for inter-ship component references (e.g. ShipWeapons, ShipEnergy, Rb, etc.)

- [] Setup and implement WeaponGroup class for use in ShipWeapons.

- [] ShipController > Set Fire methods to set flags and then be called in FixedUpdate.
  - [] Might be good to switch PlayerInput Behvaior to events, and we can tracked "pressed" using pressed this frame and released.


- [] Radar Controls
  - [] try using directional keys up/down to increase/decrease radar range;
  - [] Consider using a "dogfight mode" that adaptively expands to include the nearest or targeted enemy; It should highlight them and decrease visibility or remove other objects
    | this might also add a trail to the radar; and possibly also show a detailed blip (mini ship) and track rotation;
    
- [] ?  Cockpit interaction control scheme: Use select to toggle between selected components/menus, and directional arrows to interact/change values

- [] Add Controller Vibrations
  ===
SplitScreen Wrapup

- [] Pass 1: Fix exisiting mechanics
  - [x] Fix Explosion force
  - [x] Missle needs to fire from gun
    - [x] Move missile launch code from ShipController and implement using new weapon/projectile system
    - [x] ? add projectile script to missile prefab 
        | Made missle inherit projectile.
    - [x] Need to instantiate missile properly w/ owner id.
    - [x] Needs full test - Still colliding w/ship and not sure it's detonating properly; May be due to using protected from base class rather than virtual override.
    - [] Projectiles:
      - [] Later: Return to todos in: Weapon, Projectile, AmmoRef, and PrefabPool
      - [] Ensure lasers are doing damage
      - [x] (fixed) Missle does not destruct on impact; may be the weird protected/new when inheriting from projectile instead of virtual/override

  - [] Setup Player manager
    - [x] set playerspawn locations 
    - [x] Enable Respawn (full player life cycle)
      - [x] Decouple PlayerInput from ship controller
        - [x] Move PlayerInput to Player prefab; Switch behavior to events; Rewrite event handlers in ShipController
        - [x] Add AssignPlayerInput method to ShipController which subscribes the events and sets the playerInput field;  PlayerManager calls this when spawning a new ship.
          - [x] Setup ShipInterface component and refactor all ship components to reference that

- [x] Setup Start screen
  - [x] Setup colors on player data class and allow player to change colors for various ship components and lasers
  - [x] Setup Player UI StateManager to enable/disable various UI canvases and change control map if needed
  - [x] Show lasers when selecting laser colors (either show static, or fire)
  - [x] Fix 3D object scaling
    | ? Use render texture ?
  - [x] Add Camera and UI for pre-player join 

- [] Deal with multiple listeners issue
  - ? Create single audio listener object; It has a dedicated audiosource pool for each player; When a sound is played, an audiosource from each player's pool will be positioned around the audiolistener relative to their local postion, and played at once.

- [] Polish
  - [] Fix Radar color-setting; Use RadarTrackable and a scriptableObj ref
  - [] Set asteroid explosion particle to asteroid mesh
  - [] Add impact smoke
  - [] add explosion fx s
  - [x] Add ship thrust fx
  - [x] Try using trail renderer on laser and missile
  - [x] Re-Add Cockpit camera movement
  - [] Add cinemachine w/ camera noise
  - [] CockpitDisplay
    - [x] Text may be fixed by placing it on an independent empty game object, and updating its position manually to be in place
      | Fixed not by updating it's position manually but by ensuring it wasn't a child to a scaled object
    - [] Replace TextUI with graphics
      - [x] Replace Energy UI with progress bar
      - [] Create speed and direction indicator
      | Consider using a reference bar to indicate speed; just a line moving across a series of lines to indicate speed; This might also be directional ?
      - [] Create Ship Damage Indicator
    - [x] Add FlightAssist indicator
  - [] Add Glass crack texture on contact points
    
  - [] Setup ship customization presets
    - [] Add ability to create and save a new preset



- [] Other Fixes
  - [] Make sure environment isn't generated until after player joined
  
